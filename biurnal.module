<?php
// $Id$

/**
 * @file
 * Main module file
 */

require_once('includes/biurnal.node.inc');

function biurnal_perm() {
  return array(
    'view biurnal node',
    'edit own biurnal node',
    'create biurnal node',
    'edit all biurnal nodes',
    'preview biurnal scheme',
    'administer biurnal scheme',
  );
}

/**
 * Implementation of hook_autoload_info().
 */
function biurnal_autoload_info() {
  return array(
    'Biurnal' => array(
      'file' => 'includes/biurnal.classes.inc',
    ),
  );
}

function biurnal_init() {
  if (is_callable('actions_synchronize')) {
    actions_synchronize(FALSE, TRUE);
  }
}

function biurnal_devel_block_links() {
  return l(t('Flush biurnal cache'), 'biurnal/flush', 'Null', 'return_to='. urlencode($_GET['q']));
}

function biurnal_menu() {
  $items = array();
  $items['biurnal/preview/%nid'] = array(
    'title'   => 'Preview color scheme',
    'callback' => 'biurnal_preview_scheme',
    'access'   => user_access('preview biurnal scheme'),
    'type'     => MENU_CALLBACK,
  );
  $items['biurnal/flush'] = array(
    'title'    => 'Flush biurnal cache',
    'callback' => '_biurnal_flush_cache',
    'access'   => user_access('administer biurnal scheme'),
    'type'     => MENU_CALLBACK,
  );

  if (Biurnal::instance()->preview_scheme()) {
    $items['biurnal/stop_preview'] = array(
      'title'    => 'Stop preview of color scheme',
      'callback' => 'biurnal_preview_scheme',
      'access'   => user_access('preview biurnal scheme'),
      'type'     => MENU_NORMAL_ITEM,
    );
  }

  return $items;
}

function biurnal_preview_scheme($nid) {
  if (isset($nid)) {
    Biurnal::instance()->preview_scheme($nid);
  }
  else {
    Biurnal::instance()->stop_preview();
  }
  drupal_goto('');
}

function biurnal_preprocess_page(&$vars) {
  Biurnal::instance()->preprocess($vars);
}

function _biurnal_flush_cache() {
  $biurnal_path = file_directory_path() .'/biurnal';

  try {
    if (_biurnal_rm_recursive($biurnal_path)) {
      drupal_set_message(t('Biurnal cache cleared'), 'status');
    }
    else {
      drupal_set_message(t('Error while clearing biurnal cache: @error', array('@error' => t("Couldn't erase directory"))), 'status');
    }
  } catch (Exception $e) {
    drupal_set_message(t('Error while clearing biurnal cache: @error', array('@error' => $e->getMessage())), 'status');
  }

  drupal_goto($_GET['return_to']);
}

function _biurnal_rm_recursive($filepath) {
  if (is_dir($filepath) && !is_link($filepath)) {
    if ($dh = opendir($filepath)) {
      while (($sf = readdir($dh)) !== FALSE) {
        if ($sf == '.' || $sf == '..') {
          continue;
        }
        if (!_biurnal_rm_recursive($filepath . '/' . $sf)) {
          throw new Exception($filepath . '/' . $sf . ' could not be deleted.');
        }
      }
      closedir($dh);
    }
    return rmdir($filepath);
  }
  return unlink($filepath);
}

/**
 * Implementation of hook_views_api().
 */
function biurnal_views_api() {
  return array(
    'api' => 2.0,
    'path' => drupal_get_path('module', 'biurnal') . '/includes',
  );
}
